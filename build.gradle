plugins {
    id "maven-publish"
    id "java"
    id "java-library"
    id "com.github.johnrengelman.shadow"  version "8.1.1"
    id "cr_puzzle_gradle" version "1.0.62-dev"
}

group = "io.github"

puzzle_loader {
    accessManipulatorPath = file("src/main/resources/puzzle_loader.manipulator")
//    fabricAccessWidenerPath = file("src/main/resources/puzzle_loader.accesswidener")
//    forgeAccessTransformerPath = file("src/main/resources/META-INF/accesstransformer.cfg")
}

repositories {
    mavenCentral()

    maven { url "https://jitpack.io" }
    maven { url "https://maven.google.com/" }
    maven { url "https://maven.crmodders.dev/releases" }
    maven { url "https://maven.crmodders.dev/snapshots" }
    maven { url "https://repo.spongepowered.org/repository/maven-public/" }
    maven { url "https://libraries.minecraft.net" }
}

// do not remove fucks up building
tasks.buildBundleJar.configure {dependsOn(tasks.compileJava)}

dependencies {
    compileOnly 'org.jetbrains:annotations:24.0.0'

    compileOnly("org.spongepowered:mixin:$mixinVersion")
    bundle(annotationProcessor("io.github.llamalad7:mixinextras-common:$mixinExtrasVersion"))

    bundle("com.google.guava:guava:$guavaVersion")
    bundle("com.google.code.gson:gson:$gsonVersion")

    bundle("org.hjson:hjson:$hjsonVersion")

    bundle("com.mojang:brigadier:1.0.18")

    compileOnly("org.ow2.asm:asm:$asmVersion")
    compileOnly("org.ow2.asm:asm-tree:$asmVersion")
    compileOnly("org.ow2.asm:asm-util:$asmVersion")
    compileOnly("org.ow2.asm:asm-analysis:$asmVersion")
    compileOnly("org.ow2.asm:asm-commons:$asmVersion")

    bundle("org.apache.logging.log4j:log4j-api:$log4jVersion")
    bundle("org.apache.logging.log4j:log4j-core:$log4jVersion")
    bundle("org.apache.logging.log4j:log4j-slf4j2-impl:$log4jVersion")

    bundle("net.sf.jopt-simple:jopt-simple:$joptSimpleVersion")

    bundle("org.reflections:reflections:$reflectionsVersion")

    bundle("dev.dewy:nbt:$nbtVersion")

    bundle("org.greenrobot:eventbus:$eventbusVersion")

//    bundle("org.python:jython-slim:2.7.3")

//    bundle("org.luaj:luaj-jse:$luaJVersion")
//    bundle("org.luaj:luaj-jme:$luaJVersion")
}

processResources {
    def resourceTargets = [ // Locations of where to inject the properties
                            "assets/puzzle-loader/version.txt"
    ]

    // Left item is the name in the target, right is the varuable name
    def replaceProperties = [
            "version"     : (version + "").replaceAll((version + "").replaceAll("[\\d\\.]", ""), ""),
    ]


    inputs.properties replaceProperties
    replaceProperties.put "project", project
    filesMatching(resourceTargets) {
        expand replaceProperties
    }
}

tasks.register("runLoader", JavaExec) {
    group = "loader"

    classpath = sourceSets.main.runtimeClasspath
    mainClass = "dev.crmodders.puzzle.loader.launch.Piece"
}

publishing {
    repositories {
        maven {
            name = "crmReleases"
            url = "https://maven.crmodders.dev/releases"
            credentials{
                username = System.getenv("CRMReleasesUsername")
                password = System.getenv("CRMReleasesPassword")
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
    assemble.dependsOn buildSourcesJar, buildBundleJar
    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = id

            artifact source: buildBundleJar, classifier: '', extension: 'jar'
            artifact source: buildSourcesJar, classifier: 'source', extension: 'jar'
        }
    }
}
